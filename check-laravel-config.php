<?php

/**
 * ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Laravel
 * ‡∏£‡∏±‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: php check-laravel-config.php
 */

echo "Laravel Environment Checker\n";
echo "=========================\n\n";

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
$requiredFiles = [
    'artisan',
    '.env',
    'config/app.php',
    'bootstrap/app.php'
];

echo "1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç\n";
$allFilesExist = true;
foreach ($requiredFiles as $file) {
    if (file_exists(__DIR__ . '/' . $file)) {
        echo "‚úÖ ‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå {$file}\n";
    } else {
        echo "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå {$file}\n";
        $allFilesExist = false;
    }
}

if (!$allFilesExist) {
    echo "\n‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ö‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå Laravel\n";
    exit(1);
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö .env ‡πÅ‡∏•‡∏∞ APP_KEY
echo "\n2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå .env ‡πÅ‡∏•‡∏∞ APP_KEY\n";
$envContent = file_get_contents(__DIR__ . '/.env');
$appKey = null;

if (preg_match('/APP_KEY=(.*)/', $envContent, $matches)) {
    $appKey = trim($matches[1]);
    echo "üîë APP_KEY: {$appKey}\n";
    
    if (empty($appKey) || $appKey == 'base64:') {
        echo "‚ö†Ô∏è APP_KEY ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå\n";
    } elseif (strpos($appKey, 'base64:') !== 0) {
        echo "‚ö†Ô∏è APP_KEY ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ 'base64:'\n";
    } else {
        $keyLength = strlen(base64_decode(substr($appKey, 7)));
        echo "üìè ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏Ç‡∏≠‡∏á key: {$keyLength} bytes\n";
        
        if ($keyLength != 32) {
            echo "‚ö†Ô∏è ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß key ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡πá‡∏ô 32 bytes)\n";
        }
    }
} else {
    echo "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö APP_KEY ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå .env\n";
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö cipher ‡πÉ‡∏ô config/app.php
echo "\n3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö cipher ‡πÉ‡∏ô config/app.php\n";
$appConfigContent = file_get_contents(__DIR__ . '/config/app.php');
$cipher = null;

if (preg_match("/'cipher'\s*=>\s*'([^']*)'/", $appConfigContent, $matches)) {
    $cipher = $matches[1];
    echo "üîí Cipher setting: {$cipher}\n";
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ cipher ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    $supportedCiphers = ['aes-128-cbc', 'aes-256-cbc', 'aes-128-gcm', 'aes-256-gcm'];
    if (!in_array(strtolower($cipher), $supportedCiphers)) {
        echo "‚ùå ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö cipher ‡∏ô‡∏µ‡πâ\n";
        echo "üí° ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ: " . implode(', ', $supportedCiphers) . "\n";
    } elseif ($cipher !== strtolower($cipher)) {
        echo "‚ö†Ô∏è cipher ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏•‡πá‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡πÄ‡∏ä‡πà‡∏ô 'aes-256-cbc' ‡πÅ‡∏ó‡∏ô '{$cipher}')\n";
    } else {
        echo "‚úÖ cipher ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á\n";
    }
} else {
    echo "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ cipher ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå config/app.php\n";
}

// ‡∏™‡∏£‡∏∏‡∏õ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
echo "\n4. ‡∏™‡∏£‡∏∏‡∏õ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥\n";

$problems = [];

if (empty($appKey) || $appKey == 'base64:' || strpos($appKey, 'base64:') !== 0) {
    $problems[] = "APP_KEY ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á";
}

if (!in_array(strtolower($cipher), ['aes-128-cbc', 'aes-256-cbc', 'aes-128-gcm', 'aes-256-gcm'])) {
    $problems[] = "cipher ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö";
} elseif ($cipher !== strtolower($cipher)) {
    $problems[] = "cipher ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏•‡πá‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î";
}

if (!empty($problems)) {
    echo "‚ùå ‡∏û‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤: " . implode(", ", $problems) . "\n";
    echo "\n‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:\n";
    
    if (empty($appKey) || $appKey == 'base64:' || strpos($appKey, 'base64:') !== 0) {
        echo "1. ‡∏™‡∏£‡πâ‡∏≤‡∏á APP_KEY ‡πÉ‡∏´‡∏°‡πà:\n";
        echo "   php artisan key:generate --ansi\n";
    }
    
    if (!in_array(strtolower($cipher), ['aes-128-cbc', 'aes-256-cbc', 'aes-128-gcm', 'aes-256-gcm']) || $cipher !== strtolower($cipher)) {
        echo "2. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç cipher ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå config/app.php ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô 'aes-256-cbc':\n";
        echo "   'cipher' => 'aes-256-cbc',\n";
    }
    
    echo "\n‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏±‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥:\n";
    echo "php fix-cipher-case.php\n";
    echo "‡∏´‡∏£‡∏∑‡∏≠\nbash fix-all-issues.sh\n";
} else {
    echo "‚úÖ ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ encryption ‡∏õ‡∏Å‡∏ï‡∏¥\n";
    echo "\n‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡∏û‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤ 'Unsupported cipher or incorrect key length' ‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å:\n";
    echo "1. ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏£‡∏±‡∏ô\n";
    echo "2. ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ cipher ‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏∑‡πà‡∏ô‡∏ô‡∏≠‡∏Å‡πÄ‡∏´‡∏ô‡∏∑‡∏≠‡∏à‡∏≤‡∏Å config/app.php\n";
    echo "3. ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö service provider\n";
    
    echo "\n‡∏•‡∏≠‡∏á‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ:\n";
    echo "composer dump-autoload -o\n";
    echo "php artisan config:clear\n";
    echo "php artisan cache:clear\n";
    echo "php artisan config:cache\n";
}
